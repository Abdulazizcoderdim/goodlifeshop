generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  password     String
  firstName    String?
  lastName     String?
  phoneNumber  String?
  surname      String?
  role         UserRole       @default(CUSTOMER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
}

enum UserRole {
  CUSTOMER
  ADMIN
  MANAGER
  SUPPORT
}

model RefreshToken {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Product {
  id              String      @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  slug            String      @unique
  description     String?
  article         String // Артикул: 53001-001
  brand           String // Бренд: Zwilling
  series          String // Серия: ZWILLING ENFINIGY
  originCountry   String // Страна происхождения: КИТАЙ
  price           Float
  category        String?
  color           String?
  dimensions      Dimensions? // nested object
  dishwasherSafe  Boolean? // posudomoyka
  batteryRequired Boolean?
  characteristics Json? // характеристика: flexible
  variants        Variant[] // ranglar yoki boshqa variantlar
  images          String[] // product images
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

type Dimensions {
  productWeight Float? // kg
  productHeight Float?
  productWidth  Float?
  productLength Float?
  packageHeight Float?
  packageWidth  Float?
  packageLength Float?
  productVolume Float?
}

model Variant {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  color   String?
  price   Float?
  inStock Boolean
  images  String[] // variant-specific images

  product   Product @relation(fields: [productId], references: [id])
  productId String
}
